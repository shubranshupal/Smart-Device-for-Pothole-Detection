#include <SoftwareSerial.h> // For Bluetooth communication
#include <TinyGPS++.h>     // For GPS data parsing

SoftwareSerial bluetooth(2, 3);  // RX, TX pins for Bluetooth module
TinyGPSPlus gps;                // Create a GPS object

const int trigPin = 7;          // Ultrasonic sensor trigger pin
const int echoPin = 6;          // Ultrasonic sensor echo pin

void setup() {
  Serial.begin(9600);           // Initialize serial communication with the Arduino IDE
  bluetooth.begin(9600);        // Initialize Bluetooth communication
  
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {
  // Read GPS data
  while (bluetooth.available()) {
    char c = bluetooth.read();
    gps.encode(c);
  }

  // Check for new GPS data
  if (gps.location.isUpdated()) {
    float latitude = gps.location.lat();
    float longitude = gps.location.lng();
    
    // Send GPS data to a mobile app or data storage service
    sendGPSDataToMobileApp(latitude, longitude);
  }

  // Pothole detection using ultrasonic sensor
  long duration, distance;
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration / 58.2;  // Convert duration to distance in cm
  
  if (distance < 10) {  // You can adjust this threshold
    // Pothole detected, send alert
    sendPotholeAlert();
  }
}

void sendGPSDataToMobileApp(float latitude, float longitude) {
  // Send GPS data via Bluetooth to a mobile app
  bluetooth.print("GPS:");
  bluetooth.print(latitude, 6);  // 6 decimal places for accuracy
  bluetooth.print(",");
  bluetooth.print(longitude, 6);
  bluetooth.println();
}

void sendPotholeAlert() {
  // Send a pothole alert via Bluetooth to a mobile app
  bluetooth.println("Pothole Detected!");
  delay(1000);  // Delay to avoid sending multiple alerts for the same pothole
}
